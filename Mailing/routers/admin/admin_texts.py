# admin_texts.py
# –û–±–Ω–æ–≤–ª–µ–Ω–æ: –≤ —Ä–æ—É—Ç–µ—Ä–∞—Ö –ø–∏—à–µ–º —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏; –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –ª–æ–≥–∏ —É–±—Ä–∞–Ω—ã.

import logging
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command

from config import ID_ADMIN_USER
import messages

router = Router(name="admin_texts")

# –ú–Ω–æ–∂–µ—Å—Ç–≤–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞
_setwelcome_pending: set[int] = set()
_setadvertisement_1_pending: set[int] = set()
_setadvertisement_2_pending: set[int] = set()
_setadvertisement_pending: set[int] = set()
_setanonymity_pending: set[int] = set()
_setwork_pending: set[int] = set()
_setprojects_pending: set[int] = set()
_setdoctors_pending: set[int] = set()


def _text_command_handler(command_name: str, pending_set: set[int], file_path):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–≤–∞ —Ö—ç–Ω–¥–ª–µ—Ä–∞:
      1) —Å—Ç–∞—Ä—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /set<command_name>
      2) –ø—Ä–∏—ë–º —Ç–µ–∫—Å—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    """
    cmd = f"set{command_name}"

    @router.message(
        Command(cmd),
        F.from_user.id.in_(ID_ADMIN_USER),
        F.chat.type == "private"
    )
    async def start_handler(message: Message, cmd=cmd):
        user_id = message.from_user.id
        try:
            await message.answer(f"üìÑ –ü—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤—ã–π HTML-—Ç–µ–∫—Å—Ç –¥–ª—è ¬´{command_name}.html¬ª")
            pending_set.add(user_id)
        except Exception as e:
            logging.error(
                "–¢–µ–∫—Å—Ç—ã: –æ—à–∏–±–∫–∞ —Å—Ç–∞—Ä—Ç–∞ –æ–∂–∏–¥–∞–Ω–∏—è ‚Äî user_id=%s, —Å–µ–∫—Ü–∏—è=%s, –æ—à–∏–±–∫–∞=%s",
                user_id, command_name, e, extra={"user_id": user_id}
            )

    @router.message(
        F.from_user.id.in_(pending_set),
        F.from_user.id.in_(ID_ADMIN_USER),
        F.chat.type == "private"
    )
    async def receive_handler(message: Message, path=file_path, cmd=cmd):
        user_id = message.from_user.id
        new_text = message.text or ""
        try:
            with open(path, "w", encoding="utf-8") as f:
                f.write(new_text)
            await message.answer(f"‚úÖ –§–∞–π–ª ¬´{command_name}.html¬ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å—Ä–∞–∑—É.")
        except Exception as e:
            logging.error(
                "–¢–µ–∫—Å—Ç—ã: –æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ‚Äî user_id=%s, —Ñ–∞–π–ª=%s, –æ—à–∏–±–∫–∞=%s",
                user_id, f"{command_name}.html", e, extra={"user_id": user_id}
            )
            try:
                await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ ¬´{command_name}.html¬ª. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–∞—Ö.")
            except Exception as ee:
                logging.error(
                    "–¢–µ–∫—Å—Ç—ã: –æ—à–∏–±–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ ‚Äî user_id=%s, —Ñ–∞–π–ª=%s, –æ—à–∏–±–∫–∞=%s",
                    user_id, f"{command_name}.html", ee, extra={"user_id": user_id}
                )
        finally:
            pending_set.discard(user_id)


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ–∫—Ü–∏–π
_text_command_handler("welcome",         _setwelcome_pending,         messages.WELCOME_FILE)
_text_command_handler("advertisement_1", _setadvertisement_1_pending, "advertisement_1.html")
_text_command_handler("advertisement_2", _setadvertisement_2_pending, "advertisement_2.html")
_text_command_handler("advertisement",   _setadvertisement_pending,   "advertisement.html")
_text_command_handler("anonymity",       _setanonymity_pending,       messages.ANONYMITY_FILE)
_text_command_handler("projects",        _setprojects_pending,        messages.PROJECTS_FILE)
