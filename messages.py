import re

def escape_markdown(text: str) -> str:
    """
    Экранируем специальные символы Markdown, чтобы избежать ошибок парсинга.
    """
    return re.sub(r'([_*\[\]()~`>#+\-=|{}.!])', r'\\\1', text or "")

TERMS_MESSAGE = (
    "Нажимая кнопку, вы подтверждаете, что:\n\n"
    "– вы не бот\n"
    "– ознакомлены с Офертой\n"
    "– согласны на обработку ПД\n"
    "– вам исполнилось 18 лет\n\n"
    "Чат — не медицинское сообщество. "
    "Общение не заменяет лечение, это лишь поддержка. "
    "Если вам тяжело — обратитесь к специалистам.\n"
    "Вы ответственны за последствия применения любой информации."
)

def get_invite_links_text(links) -> str:
    """
    Формирует текст со всеми ссылками на проекты и приватные чаты.
    Параметр links - список кортежей: (title, link, description).
    """
    fixed = (
        "**Здесь находятся все ссылки на проекты сообщества «Лудочат»**\n"
        "\n"
        "[Лудочат · помощь игрокам](https://t.me/+as3JmHK21sxhMGEy) — чат взаимовыручки для людей с азартно-игровым расстройством.\n"
        "[Серый Лудочат](https://t.me/GrayLudoChat) — “серые” темы: продажа аккаунтов, разблокировка, защитные схемы.\n"
        "\n"
        "**Приватные чаты:**\n"
    )

    lines = [fixed]
    for title, link, desc in links:
        lines.append(f"[{escape_markdown(title)}]({link}) — {escape_markdown(desc)}\n")
    test_link = links[0][1] if links else ""
    lines.append(f"[Тест]({test_link}) — тестовая индивидуальная ссылка\n")
    tail = (
        "\n"
        "**Наши каналы:**\n"
        "[Антигембл](https://t.me/antigambl) — канал основателя с регулярными обновлениями и советами.\n"
        "[Блог «Лудочат»](https://t.me/LudoBlog) — блог сообщества с личными историями и лайфстайл-контентом.\n"
        "\n"
        "**Наши боты:**\n"
        "[Выручка](https://t.me/viruchkaa_bot?start=0012) — сервисы для заработка и продажи, помощь игрокам в поиске решений.\n"
        "[Алгоритм](https://t.me/algorithmga_bot?start=0011) — бот с алгоритмом самопомощи при азартно-игровом расстройстве."
    )
    lines.append(tail)
    return "".join(lines)
